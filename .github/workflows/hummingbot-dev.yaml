name: Hummingbot DEV CI/CD

on:
  push:
    branches: [develop]
  workflow_dispatch:

env:
  CRYPTO_PAIR_01: deuro-usdt
  CRYPTO_PAIR_02: deuro-btc
  CRYPTO_PAIR_03: deps-usdt
  CRYPTO_PAIR_04: deps-btc
  DOCKER_TAGS: dfxswiss/hummingbot:beta
  AZURE_RESOURCE_GROUP: rg-dfx-api-dev
  AZURE_STORAGE_ACCOUNT_NAME: stdfxapidev
  DEPLOY_INFO: ${{ github.ref_name }}-${{ github.sha }}

jobs:
  build-and-deploy:
    name: Build, test and deploy to DEV
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .
    steps:
      - name: Checkout
        uses: actions/checkout@v4

#      - name: Log in to Docker Hub
#        uses: docker/login-action@v3
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}

#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v3

#      - name: Build and push Docker image
#        uses: docker/build-push-action@v6
#        with:
#          context: .
#          push: true
#          tags: ${{ env.DOCKER_TAGS }}

      - name: Log in to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.DFX_DEV_CREDENTIALS }}

      - name: Get Storage Key
        run: |
          STORAGE_KEY=$(az storage account keys list \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
            --account-name ${{ env.AZURE_STORAGE_ACCOUNT_NAME }} \
            --query '[0].value' -o tsv)
          echo "STORAGE_KEY=$STORAGE_KEY" >> $GITHUB_ENV

      - name: Get Log Analytics Info
        run: |
          LOG_WORKSPACE_ID=$(az monitor log-analytics workspace show \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
            --workspace-name ${{ env.AZURE_WORKSPACE_NAME }} \
            --query customerId -o tsv)

          LOG_WORKSPACE_KEY=$(az monitor log-analytics workspace get-shared-keys \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
            --workspace-name ${{ env.AZURE_WORKSPACE_NAME }} \
            --query primarySharedKey -o tsv)
          echo "LOG_WORKSPACE_ID=$LOG_WORKSPACE_ID" >> $GITHUB_ENV
          echo "LOG_WORKSPACE_KEY=$LOG_WORKSPACE_KEY" >> $GITHUB_ENV

      - name: Render deployment YAML for CRYPTO_PAIR_01
        uses: nowactions/envsubst@v1
        with:
          input: ./aci-dev.yaml
          output: ./rendered-aci-${{ env.CRYPTO_PAIR_01 }}-dev.yaml
        env:
          CRYPTO_PAIR:  ${{ env.CRYPTO_PAIR_01 }}
          DEPLOY_INFO: ${{ env.DEPLOY_INFO }}
          STORAGE_KEY: ${{ env.STORAGE_KEY }}
          LOG_WORKSPACE_ID: ${{ env.LOG_WORKSPACE_ID }}
          LOG_WORKSPACE_KEY: ${{ env.LOG_WORKSPACE_KEY }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Render deployment YAML for CRYPTO_PAIR_02
        uses: nowactions/envsubst@v1
        with:
          input: ./aci-dev.yaml
          output: ./rendered-aci-${{ env.CRYPTO_PAIR_02 }}-dev.yaml
        env:
          CRYPTO_PAIR:  ${{ env.CRYPTO_PAIR_02 }}
          DEPLOY_INFO: ${{ env.DEPLOY_INFO }}
          STORAGE_KEY: ${{ env.STORAGE_KEY }}
          LOG_WORKSPACE_ID: ${{ env.LOG_WORKSPACE_ID }}
          LOG_WORKSPACE_KEY: ${{ env.LOG_WORKSPACE_KEY }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Render deployment YAML for CRYPTO_PAIR_03
        uses: nowactions/envsubst@v1
        with:
          input: ./aci-dev.yaml
          output: ./rendered-aci-${{ env.CRYPTO_PAIR_03 }}-dev.yaml
        env:
          CRYPTO_PAIR:  ${{ env.CRYPTO_PAIR_03 }}
          DEPLOY_INFO: ${{ env.DEPLOY_INFO }}
          STORAGE_KEY: ${{ env.STORAGE_KEY }}
          LOG_WORKSPACE_ID: ${{ env.LOG_WORKSPACE_ID }}
          LOG_WORKSPACE_KEY: ${{ env.LOG_WORKSPACE_KEY }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Render deployment YAML for CRYPTO_PAIR_04
        uses: nowactions/envsubst@v1
        with:
          input: ./aci-dev.yaml
          output: ./rendered-aci-${{ env.CRYPTO_PAIR_04 }}-dev.yaml
        env:
          CRYPTO_PAIR:  ${{ env.CRYPTO_PAIR_04 }}
          DEPLOY_INFO: ${{ env.DEPLOY_INFO }}
          STORAGE_KEY: ${{ env.STORAGE_KEY }}
          LOG_WORKSPACE_ID: ${{ env.LOG_WORKSPACE_ID }}
          LOG_WORKSPACE_KEY: ${{ env.LOG_WORKSPACE_KEY }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Stop Azure Container Instance
        run: |
          az container stop --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --name ci-dfx-hb-${{ env.CRYPTO_PAIR_04 }}-dev
#          az container stop --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --name ci-dfx-hb-${{ env.CRYPTO_PAIR_01 }}-dev
#          az container stop --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --name ci-dfx-hb-${{ env.CRYPTO_PAIR_02 }}-dev
#          az container stop --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --name ci-dfx-hb-${{ env.CRYPTO_PAIR_03 }}-dev

      - name: Delete Azure Container Instance
        run: |
          az container delete --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --name ci-dfx-hb-${{ env.CRYPTO_PAIR_04 }}-dev --yes
#          az container delete --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --name ci-dfx-hb-${{ env.CRYPTO_PAIR_01 }}-dev --yes
#          az container delete --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --name ci-dfx-hb-${{ env.CRYPTO_PAIR_02 }}-dev --yes
#          az container delete --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --name ci-dfx-hb-${{ env.CRYPTO_PAIR_03 }}-dev --yes

      - name: Deploy container instance
        run: |
          az container create --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --file ./rendered-aci-${{ env.CRYPTO_PAIR_04 }}-dev.yaml
#          az container create --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --file ./rendered-aci-${{ env.CRYPTO_PAIR_01 }}-dev.yaml
#          az container create --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --file ./rendered-aci-${{ env.CRYPTO_PAIR_02 }}-dev.yaml
#          az container create --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --file ./rendered-aci-${{ env.CRYPTO_PAIR_03 }}-dev.yaml

      - name: Logout from Azure
        run: |
          az logout
        if: always()
